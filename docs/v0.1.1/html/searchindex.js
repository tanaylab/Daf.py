Search.setIndex({"docnames": ["API", "adapters", "anndata_format", "concat", "copies", "data", "formats", "generic_functions", "index", "julia_import", "operations", "queries", "readme", "storage_types", "views"], "filenames": ["API.rst", "adapters.rst", "anndata_format.rst", "concat.rst", "copies.rst", "data.rst", "formats.rst", "generic_functions.rst", "index.rst", "julia_import.rst", "operations.rst", "queries.rst", "readme.rst", "storage_types.rst", "views.rst"], "titles": ["API", "adapters", "anndata_format", "concat", "copies", "data", "formats", "generic_functions", "dafpy 0.1.1", "julia_import", "operations", "queries", "Daf.py 0.1.1 - Data in Axes in Formats", "storage_types", "views"], "terms": {"data": [0, 1, 2, 3, 4, 6, 10, 11, 14], "ax": [0, 5, 14], "file": [0, 2, 6, 12], "thi": [0, 1, 2, 5, 6, 9, 12, 14], "i": [0, 2, 5, 6, 7, 9, 10, 11, 12, 14], "thin": [0, 6], "wrapper": [0, 5, 6, 7, 12], "dataaxesformat": [0, 9, 12], "jl": [0, 2, 9, 12], "julia": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14], "packag": [0, 1, 2, 7, 9, 12], "follow": [0, 9, 11, 12], "adapt": [0, 9], "In": [0, 7], "defin": 0, "set": [0, 1, 2, 3, 4, 5, 6, 11, 12, 14], "function": [0, 1, 7, 9, 12], "which": [0, 1, 2, 5, 6, 7, 9, 12], "take": [0, 5, 7, 11], "daf": [0, 1, 2, 3, 4, 5, 6, 10, 11, 13, 14], "object": [0, 2, 4, 9, 12], "1st": 0, "paramet": [0, 14], "python": [0, 1, 2, 5, 6, 9, 10, 11, 12, 13, 14], "implement": [0, 1, 5, 6, 12], "member": [0, 12], "dafread": [0, 2, 3, 4, 5, 6, 11, 12, 14], "dafwrit": [0, 1, 2, 3, 4, 5, 6, 12], "class": [0, 5, 9, 10, 11, 12], "wrap": [0, 5, 14], "match": [0, 11], "e": [0, 5, 6, 12], "g": [0, 5, 6, 12], "": [0, 5, 7, 9, 11], "get_vector": 0, "gene": 0, "is_mark": 0, "becom": 0, "doesn": [0, 1, 5, 6], "t": [0, 1, 5, 6, 12], "support": [0, 1, 6, 12, 13], "trail": 0, "charact": 0, "name": [0, 1, 2, 3, 4, 5, 6, 7, 11, 14], "indic": [0, 5], "modifi": [0, 12], "so": [0, 1, 5, 6, 12], "remov": 0, "from": [0, 1, 2, 3, 4, 5, 7, 9, 11, 12, 14], "method": 0, "set_vector": [0, 5], "mask": [0, 11], "callback": 0, "first": [0, 5], "should": [0, 5, 7, 9], "invok": [0, 1, 5], "us": [0, 1, 2, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14], "statement": [0, 5], "empty_dense_vector": [0, 5], "do": [0, 1, 2, 6, 11, 12], "empty_vector": [0, 5], "end": 0, "sinc": [0, 1, 2, 5, 12, 14], "onli": [0, 2, 5, 6, 9, 14], "allow": [0, 5, 9, 12, 14], "singl": [0, 3, 6, 11], "block": [0, 5], "provid": [0, 1, 5, 9, 11, 12], "multipl": [0, 3, 5], "empty_sparse_": 0, "thei": [0, 1, 5, 12], "ar": [0, 5, 11, 12, 13, 14], "pack": 0, "tupl": [0, 1, 3, 4, 5, 14], "dens": [0, 5], "numer": [0, 5, 11], "np": [0, 5, 13], "ndarrai": [0, 5], "pass": [0, 2, 5, 6], "zero": [0, 5, 10, 11], "copi": [0, 1, 5, 12], "between": [0, 4, 5, 12], "anyth": 0, "els": 0, "creat": [0, 1, 2, 5, 6, 9, 14], "an": [0, 2, 4, 5, 6, 7, 11, 12], "memori": [0, 5, 6], "ala": 0, "includ": [0, 5, 12], "spars": [0, 5], "matric": [0, 5, 14], "becaus": [0, 2, 5, 6], "1": [0, 3, 5, 9, 11], "base": [0, 1, 5, 9, 10, 11, 12, 14], "intern": [0, 12], "represent": 0, "while": 0, "colptr": [0, 5], "equal": [0, 11], "plu": 0, "indptr": 0, "forc": [0, 5, 13], "u": [0, 9], "increment": 0, "decrement": 0, "when": [0, 7, 9, 11], "languag": [0, 1], "also": [0, 5], "note": [0, 2, 5, 6, 14], "you": [0, 2, 5, 6, 9, 11, 13, 14], "fill": [0, 5], "empti": [0, 1, 3, 4, 5, 11], "arrai": [0, 5], "valu": [0, 5, 9, 10, 11, 14], "like": [0, 1, 11, 12], "column": [0, 5, 11], "major": [0, 5], "all": [0, 4, 5, 9, 10, 12, 14], "given": [0, 5, 10, 11], "return": [0, 1, 2, 5, 7, 10, 11], "therefor": 0, "layout": [0, 5], "contrast": 0, "row": [0, 5, 11], "To": [0, 5, 11], "convert": [0, 5, 10, 11, 13], "two": [0, 11], "flip": [0, 5, 11], "order": [0, 5, 6, 14], "transpos": [0, 5], "view": [0, 1, 2, 5], "veri": 0, "effici": [0, 1, 5], "get": [0, 5], "umi": 0, "matrix": [0, 4, 5, 7, 10, 11], "per": [0, 9], "cell": [0, 14], "write": [0, 5, 11, 12, 14], "get_np_matrix": [0, 5], "ha": [0, 1, 5], "notion": 0, "vector": [0, 4, 5, 10, 11, 14], "reason": [0, 5], "r": [0, 1, 6], "sensibli": 0, "them": [0, 6], "read": [0, 5, 6, 14], "automat": [0, 9, 13], "numpi": [0, 1, 4, 5, 13], "one": [0, 1, 3, 9], "can": [0, 5, 9, 10, 13, 14], "howev": [0, 12], "still": 0, "store": [0, 5, 13], "call": [0, 1, 5, 9], "empty_sparse_vector": [0, 5], "insid": [0, 5, 10], "panda": [0, 5], "datafram": [0, 5], "care": [0, 5], "ask": 0, "frame": [0, 5], "larg": [0, 5], "consum": 0, "lot": 0, "otherwis": [0, 5, 12], "work": [0, 9], "just": [0, 2, 6, 9, 12], "same": [0, 5, 11, 12], "The": [0, 1, 5, 7, 9, 12, 13, 14], "document": [0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 14], "mostli": 0, "link": 0, "relev": 0, "entri": [0, 5, 11, 14], "julia_import": [0, 4], "jl_version": [0, 9], "undefiniti": [0, 4, 5, 9], "undef": [0, 5, 9], "descript": [0, 5], "has_scalar": [0, 5], "get_scalar": [0, 5, 12], "scalars_set": [0, 5], "has_axi": [0, 5], "axes_set": [0, 5], "axis_length": [0, 5], "axis_np_vector": [0, 5], "axis_np_entri": [0, 5], "axis_dict": [0, 5], "axis_np_indic": [0, 5], "axis_pd_indic": [0, 5], "has_vector": [0, 5], "vectors_set": [0, 5], "get_np_vector": [0, 5], "get_pd_vector": [0, 5], "has_matrix": [0, 5], "matrices_set": [0, 5], "get_pd_matrix": [0, 5], "empty_cach": [0, 5], "has_queri": [0, 5], "get_np_queri": [0, 5], "get_pd_queri": [0, 5], "get_pd_fram": [0, 5], "read_onli": [0, 5], "dafreadonli": [0, 5, 6, 14], "set_scalar": [0, 5, 12], "delete_scalar": [0, 5], "add_axi": [0, 5], "delete_axi": [0, 5], "delete_vector": [0, 5], "set_matrix": [0, 5], "empty_dense_matrix": [0, 5], "empty_sparse_matrix": [0, 5], "relayout_matrix": [0, 5], "delete_matrix": [0, 5], "cachegroup": [0, 5], "storage_typ": 0, "storagenumb": [0, 13], "storagescalar": [0, 13], "queri": [0, 1, 5, 10, 14], "And": [0, 11], "andnot": [0, 11], "asaxi": [0, 11], "axi": [0, 1, 3, 4, 5, 11, 14], "countbi": [0, 11], "fetch": [0, 11], "groupbi": [0, 11], "ifmiss": [0, 11], "ifnot": [0, 11], "isequ": [0, 11], "isgreat": [0, 11], "isgreaterequ": [0, 11], "isless": [0, 11], "islessequ": [0, 11], "ismatch": [0, 11], "isnotequ": [0, 11], "isnotmatch": [0, 11], "lookup": [0, 1, 5, 11, 14], "maskslic": [0, 11], "Or": [0, 11], "ornot": [0, 11], "parse_queri": [0, 11], "squaremaskcolumn": [0, 11], "squaremaskrow": [0, 11], "xor": [0, 11], "xornot": [0, 11], "query_result_dimens": [0, 11], "oper": [0, 1, 5, 7, 11], "queryoper": [0, 10], "querysequ": [0, 1, 5, 10, 11, 14], "eltwiseoper": [0, 10], "reductionoper": [0, 10, 11], "ab": [0, 10], "clamp": [0, 10], "fraction": [0, 10], "log": [0, 7, 10], "max": [0, 10], "median": [0, 10], "mean": [0, 5, 10], "min": [0, 10], "quantil": [0, 10], "round": [0, 10], "signific": [0, 10], "std": [0, 10], "stdn": [0, 10], "sum": [0, 10], "var": [0, 10], "varn": [0, 10], "format": 0, "memory_daf": [0, 1, 6], "files_daf": [0, 6], "h5df": [0, 6], "chain_read": [0, 6], "chain_writ": [0, 6], "viewer": [0, 14], "viewax": [0, 14], "viewdata": [0, 14], "all_scalar": [0, 14], "all_ax": [0, 14], "all_vector": [0, 14], "all_matric": [0, 14], "copy_al": [0, 4], "emptydata": [0, 4], "copy_scalar": [0, 4], "copy_axi": [0, 4], "copy_vector": [0, 4], "copy_matrix": [0, 4], "copy_tensor": [0, 4], "concat": 0, "concaten": [0, 3], "anndata_format": 0, "h5ad_as_daf": [0, 2], "daf_as_h5ad": [0, 2], "generic_funct": 0, "abnormalhandl": [0, 7], "inefficient_action_handl": [0, 7], "loglevel": [0, 7], "setup_logg": [0, 7], "comput": [1, 9], "see": [1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 14], "detail": [1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 14], "self": [1, 5], "explicitli": 1, "declar": 1, "contract": [1, 12], "describ": 1, "input": 1, "output": 1, "util": 1, "we": [1, 2, 5, 7, 9, 11, 12], "d": [1, 11], "promot": 1, "would": 1, "particular": [1, 12], "effect": 1, "parallel": 1, "avail": [1, 7, 9], "equival": 1, "That": [1, 6, 12], "said": 1, "noth": 1, "prevent": 1, "creation": 1, "pipelin": 1, "ani": [1, 5, 12], "other": [1, 11, 12], "insist": [1, 4], "dafpi": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14], "input_ax": 1, "type": [1, 5, 7, 10, 11, 13, 14], "map": [1, 3, 4, 5, 14], "str": [1, 2, 3, 4, 5, 6, 11, 13, 14], "none": [1, 2, 3, 4, 5, 6, 7, 10, 11, 14], "input_data": 1, "captur": 1, "callabl": 1, "output_ax": 1, "output_data": 1, "bool": [1, 3, 4, 5, 7, 11, 13], "int": [1, 3, 4, 5, 7, 11, 13], "float": [1, 3, 4, 5, 10, 11, 13], "int8": [1, 3, 4, 5, 11, 13], "int16": [1, 3, 4, 5, 11, 13], "int32": [1, 3, 4, 5, 11, 13], "int64": [1, 3, 4, 5, 11, 13], "uint8": [1, 3, 4, 5, 11, 13], "uint16": [1, 3, 4, 5, 11, 13], "uint32": [1, 3, 4, 5, 11, 13], "uint64": [1, 3, 4, 5, 11, 13], "float32": [1, 3, 4, 5, 11, 13], "float64": [1, 3, 4, 5, 11, 13], "relayout": [1, 4, 5], "true": [1, 3, 4, 5, 7], "overwrit": [1, 3, 4, 5], "fals": [1, 3, 4, 5, 7, 11], "iter": [1, 5], "sourc": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 14], "some": [1, 3, 4, 5, 11, 12], "result": [1, 5, 6, 11], "import": [2, 9, 11, 12], "export": [2, 12], "anndata": [2, 12], "h5ad": [2, 12], "obs_i": 2, "var_i": 2, "x_i": 2, "unsupported_handl": 2, "liter": [2, 3, 5, 7], "ignorehandl": [2, 7], "warnhandl": [2, 7], "errorhandl": [2, 7], "specif": [2, 5, 6, 13], "memorydaf": [2, 6], "path": [2, 6], "come": 2, "muon": [2, 12], "compat": 2, "along": [3, 5, 12], "destin": [3, 4], "sequenc": [3, 5, 6, 10], "dataset_axi": 3, "dataset": 3, "dataset_properti": 3, "prefix": [3, 7, 11], "abstractset": [3, 5], "sparse_if_saves_storage_fract": 3, "0": [3, 5, 10, 11], "merg": [3, 12], "skipproperti": 3, "lastvalu": 3, "collectaxi": 3, "more": 3, "content": [4, 5], "specifi": [4, 7, 9, 11, 14], "miss": [4, 11], "properti": [4, 5, 11], "alia": [4, 5, 7, 11, 14], "union": [4, 5, 7, 11, 14], "renam": 4, "default": [4, 5, 9, 14], "scalar": [4, 5, 10, 11, 13, 14], "reaxi": 4, "rows_axi": [4, 5], "columns_axi": [4, 5], "rows_reaxi": 4, "columns_reaxi": 4, "main_axi": 4, "tensor": 4, "interfac": [5, 9, 12], "jl_obj": [5, 6, 10], "access": [5, 6, 7, 12], "hopefulli": 5, "uniqu": 5, "cach": 5, "deep": 5, "multi": 5, "line": 5, "check": 5, "whether": [5, 12], "exist": 5, "alwai": 5, "regardless": 5, "instead": [5, 9, 10, 11, 12], "number": [5, 9, 11, 13], "A": [5, 6, 9, 10, 11, 12, 14], "repeat": 5, "allow_empti": 5, "here": [5, 6], "fit": [5, 12], "convent": 5, "neg": 5, "string": [5, 11], "dictionari": [5, 14], "integ": [5, 10], "index": [5, 8], "seri": 5, "special": 5, "unless": 5, "doe": [5, 6], "If": [5, 11], "concept": 5, "api": [5, 6, 12], "around": [5, 12], "csc_matrix": 5, "scipi": 5, "c": 5, "fortran": 5, "simpli": 5, "csr_matrix": 5, "although": 5, "deprec": 5, "avoid": [5, 9], "cost": 5, "contain": 5, "too": [5, 7], "confus": 5, "get_fram": 5, "real": 5, "arbitrari": 5, "possibli": 5, "differ": [5, 11, 14], "each": [5, 11], "clear": 5, "mappeddata": 5, "memorydata": 5, "querydata": 5, "keep": 5, "By": [5, 9], "complet": [5, 12], "appli": 5, "full": 5, "isn": 5, "similar": [5, 11], "2d": [5, 12], "mai": [5, 9, 11], "have": [5, 9, 12], "matter": [5, 14], "luckili": [5, 14], "modern": [5, 14], "color": 5, "ag": 5, "batch": 5, "trust": [5, 14], "second": 5, "sett": 5, "dafreadonlywrapp": 5, "protect": 5, "against": [5, 7], "accident": 5, "modif": [5, 12], "chain": [5, 6, 10], "appropri": 5, "must_exist": 5, "delet": 5, "add": 5, "new": 5, "made": 5, "As": [5, 11], "conveni": 5, "1xn": 5, "nx1": 5, "mercifulli": 5, "interpret": 5, "slice": [5, 11], "eltyp": 5, "contextmanag": 5, "meant": 5, "dset": [5, 6, 14], "nnz": 5, "indtyp": 5, "its": [5, 10], "part": 5, "nzind": 5, "nzval": 5, "empty_nzind": 5, "empty_nzv": 5, "sparsevector": 5, "need": [5, 6, 9, 12], "oppos": [5, 9], "typic": 5, "due": 5, "share": 5, "sigh": 5, "standard": [5, 10], "empty_matrix": 5, "rowval": 5, "empty_colptr": 5, "empty_rowv": 5, "cr": 5, "_matrix": 5, "well": 5, "concret": 6, "simpl": 6, "storag": 6, "mode": [6, 7], "disk": 6, "root": 6, "hdf5": 6, "group": [6, 11], "want": [6, 9, 11, 13], "open": 6, "yourself": 6, "current": [6, 7], "speak": 6, "present": 6, "tanaylabutil": 7, "make": 7, "principl": 7, "put": 7, "separ": 7, "py": 7, "much": [7, 12], "hassl": 7, "action": [7, 12], "encount": 7, "abnorm": 7, "recover": 7, "handler": 7, "ineffici": 7, "wai": 7, "grain": 7, "previou": 7, "level": 7, "debug": 7, "info": 7, "warn": 7, "error": 7, "io": [7, 9, 12], "textio": 7, "_io": 7, "textiowrapp": 7, "stderr": 7, "w": 7, "encod": 7, "utf": 7, "8": 7, "show_tim": 7, "show_modul": 7, "show_loc": 7, "setup": 7, "global": 7, "logger": 7, "print": 7, "must": [7, 11], "either": 7, "sy": 7, "stdout": 7, "messag": 7, "timestamp": 7, "readm": 8, "environ": 9, "addit": 9, "top": 9, "juliapkg": 9, "download": 9, "It": 9, "juliacal": [9, 12], "modul": 9, "control": 9, "behavior": 9, "variabl": 9, "python_juliacall_handle_sign": 9, "ye": 9, "segfault": 9, "python_juliacall_thread": 9, "auto": 9, "thread": 9, "machin": 9, "On": 9, "hyper": 9, "half": 9, "physic": 9, "core": 9, "better": 9, "perform": 9, "intens": 9, "code": 9, "python_juliacall_optlevel": 9, "3": 9, "pysr": 9, "our": 9, "main": 9, "run": 9, "time": 9, "11": 9, "5": 9, "version": [9, 12], "being": 9, "overload": 9, "presenc": 9, "process": 10, "preserv": [10, 14], "shape": 10, "reduc": 10, "element": 10, "wise": 10, "abstract": 10, "reduct": 10, "everi": 10, "absolut": 10, "inf": 10, "rang": 10, "out": [10, 12], "total": 10, "2": [10, 11, 12], "718281828459045": 10, "ep": 10, "logarithm": 10, "maxim": 10, "minim": 10, "p": 10, "certain": 10, "lower": 10, "nearest": 10, "high": 10, "low": 10, "insignific": 10, "deviat": 10, "normal": 10, "divid": 10, "varianc": 10, "extract": 11, "restrict": [11, 12], "invers": 11, "There": [11, 12], "three": 11, "case": 11, "where": 11, "consid": 11, "gener": [11, 12], "count": 11, "combin": 11, "pair": [11, 14], "anoth": 11, "whose": 11, "aggreg": 11, "missing_valu": 11, "ish": 11, "boolean": 11, "purpos": [11, 12], "comparison": 11, "except": 11, "select": 11, "compar": 11, "regular": 11, "express": [11, 12], "look": 11, "pattern": 11, "up": 11, "kind": [11, 12], "expand": 11, "query_str": 11, "pars": 11, "someth": 11, "q": 11, "squar": 11, "dimens": 11, "uniform": 12, "1d": 12, "arrang": 12, "pip": 12, "most": 12, "expos": [12, 14], "reader": 12, "suffix": 12, "writer": 12, "your": 12, "best": 12, "bet": 12, "go": 12, "through": 12, "v0": 12, "http": 12, "tanaylab": 12, "github": 12, "alpha": 12, "releas": 12, "hope": 12, "featur": 12, "start": 12, "project": 12, "everyth": 12, "subject": 12, "chang": 12, "user": 12, "feedback": 12, "don": 12, "shy": 12, "comment": 12, "bug": 12, "report": 12, "pr": 12, "welcom": 12, "copyright": 12, "2024": 12, "weizmann": 12, "institut": 12, "scienc": 12, "permiss": 12, "herebi": 12, "grant": 12, "free": 12, "charg": 12, "person": 12, "obtain": 12, "softwar": 12, "associ": 12, "deal": 12, "without": 12, "limit": 12, "right": 12, "publish": 12, "distribut": 12, "sublicens": 12, "sell": 12, "permit": 12, "whom": 12, "furnish": 12, "condit": 12, "abov": 12, "notic": 12, "shall": 12, "substanti": 12, "portion": 12, "THE": 12, "AS": 12, "warranti": 12, "OF": 12, "OR": 12, "impli": 12, "BUT": 12, "NOT": 12, "TO": 12, "merchant": 12, "FOR": 12, "AND": 12, "noninfring": 12, "IN": 12, "NO": 12, "event": 12, "author": 12, "holder": 12, "BE": 12, "liabl": 12, "claim": 12, "damag": 12, "liabil": 12, "tort": 12, "aris": 12, "connect": 12, "WITH": 12, "definit": 13, "built": 13, "respect": 13, "smaller": 13, "dafview": 14, "ob": 14, "similarli": 14, "kei": 14, "notat": 14, "option": 14}, "objects": {"": [[0, 0, 0, "-", "dafpy"]], "dafpy": [[1, 0, 0, "-", "adapters"], [2, 0, 0, "-", "anndata_format"], [3, 0, 0, "-", "concat"], [4, 0, 0, "-", "copies"], [5, 0, 0, "-", "data"], [6, 0, 0, "-", "formats"], [7, 0, 0, "-", "generic_functions"], [9, 0, 0, "-", "julia_import"], [10, 0, 0, "-", "operations"], [11, 0, 0, "-", "queries"], [13, 0, 0, "-", "storage_types"], [14, 0, 0, "-", "views"]], "dafpy.adapters": [[1, 1, 1, "", "adapter"]], "dafpy.anndata_format": [[2, 1, 1, "", "daf_as_h5ad"], [2, 1, 1, "", "h5ad_as_daf"]], "dafpy.concat": [[3, 1, 1, "", "concatenate"]], "dafpy.copies": [[4, 2, 1, "", "EmptyData"], [4, 1, 1, "", "copy_all"], [4, 1, 1, "", "copy_axis"], [4, 1, 1, "", "copy_matrix"], [4, 1, 1, "", "copy_scalar"], [4, 1, 1, "", "copy_tensor"], [4, 1, 1, "", "copy_vector"]], "dafpy.data": [[5, 2, 1, "", "CacheGroup"], [5, 3, 1, "", "DafReadOnly"], [5, 3, 1, "", "DafReader"], [5, 3, 1, "", "DafWriter"]], "dafpy.data.DafReadOnly": [[5, 4, 1, "", "read_only"]], "dafpy.data.DafReader": [[5, 4, 1, "", "axes_set"], [5, 4, 1, "", "axis_dict"], [5, 4, 1, "", "axis_length"], [5, 4, 1, "", "axis_np_entries"], [5, 4, 1, "", "axis_np_indices"], [5, 4, 1, "", "axis_np_vector"], [5, 4, 1, "", "axis_pd_indices"], [5, 4, 1, "", "description"], [5, 4, 1, "", "empty_cache"], [5, 4, 1, "", "get_np_matrix"], [5, 4, 1, "", "get_np_query"], [5, 4, 1, "", "get_np_vector"], [5, 4, 1, "", "get_pd_frame"], [5, 4, 1, "", "get_pd_matrix"], [5, 4, 1, "", "get_pd_query"], [5, 4, 1, "", "get_pd_vector"], [5, 4, 1, "", "get_scalar"], [5, 4, 1, "", "has_axis"], [5, 4, 1, "", "has_matrix"], [5, 4, 1, "", "has_query"], [5, 4, 1, "", "has_scalar"], [5, 4, 1, "", "has_vector"], [5, 4, 1, "", "matrices_set"], [5, 5, 1, "", "name"], [5, 4, 1, "", "read_only"], [5, 4, 1, "", "scalars_set"], [5, 4, 1, "", "vectors_set"]], "dafpy.data.DafWriter": [[5, 4, 1, "", "add_axis"], [5, 4, 1, "", "delete_axis"], [5, 4, 1, "", "delete_matrix"], [5, 4, 1, "", "delete_scalar"], [5, 4, 1, "", "delete_vector"], [5, 4, 1, "", "empty_dense_matrix"], [5, 4, 1, "", "empty_dense_vector"], [5, 4, 1, "", "empty_sparse_matrix"], [5, 4, 1, "", "empty_sparse_vector"], [5, 4, 1, "", "relayout_matrix"], [5, 4, 1, "", "set_matrix"], [5, 4, 1, "", "set_scalar"], [5, 4, 1, "", "set_vector"]], "dafpy.formats": [[6, 1, 1, "", "chain_reader"], [6, 1, 1, "", "chain_writer"], [6, 1, 1, "", "files_daf"], [6, 1, 1, "", "h5df"], [6, 1, 1, "", "memory_daf"]], "dafpy.generic_functions": [[7, 2, 1, "", "AbnormalHandler"], [7, 2, 1, "", "LogLevel"], [7, 1, 1, "", "inefficient_action_handler"], [7, 1, 1, "", "setup_logger"]], "dafpy.julia_import": [[9, 2, 1, "", "Undef"], [9, 3, 1, "", "UndefInitializer"], [9, 2, 1, "", "jl"], [9, 2, 1, "", "jl_version"]], "dafpy.operations": [[10, 3, 1, "", "Abs"], [10, 3, 1, "", "Clamp"], [10, 3, 1, "", "Convert"], [10, 3, 1, "", "EltwiseOperation"], [10, 3, 1, "", "Fraction"], [10, 3, 1, "", "Log"], [10, 3, 1, "", "Max"], [10, 3, 1, "", "Mean"], [10, 3, 1, "", "Median"], [10, 3, 1, "", "Min"], [10, 3, 1, "", "Quantile"], [10, 3, 1, "", "QueryOperation"], [10, 3, 1, "", "QuerySequence"], [10, 3, 1, "", "ReductionOperation"], [10, 3, 1, "", "Round"], [10, 3, 1, "", "Significant"], [10, 3, 1, "", "Std"], [10, 3, 1, "", "StdN"], [10, 3, 1, "", "Sum"], [10, 3, 1, "", "Var"], [10, 3, 1, "", "VarN"]], "dafpy.queries": [[11, 3, 1, "", "And"], [11, 3, 1, "", "AndNot"], [11, 3, 1, "", "AsAxis"], [11, 3, 1, "", "Axis"], [11, 3, 1, "", "CountBy"], [11, 3, 1, "", "Fetch"], [11, 3, 1, "", "GroupBy"], [11, 3, 1, "", "IfMissing"], [11, 3, 1, "", "IfNot"], [11, 3, 1, "", "IsEqual"], [11, 3, 1, "", "IsGreater"], [11, 3, 1, "", "IsGreaterEqual"], [11, 3, 1, "", "IsLess"], [11, 3, 1, "", "IsLessEqual"], [11, 3, 1, "", "IsMatch"], [11, 3, 1, "", "IsNotEqual"], [11, 3, 1, "", "IsNotMatch"], [11, 3, 1, "", "Lookup"], [11, 3, 1, "", "MaskSlice"], [11, 3, 1, "", "Names"], [11, 3, 1, "", "Or"], [11, 3, 1, "", "OrNot"], [11, 2, 1, "", "Query"], [11, 3, 1, "", "SquareMaskColumn"], [11, 3, 1, "", "SquareMaskRow"], [11, 3, 1, "", "Xor"], [11, 3, 1, "", "XorNot"], [11, 1, 1, "", "parse_query"], [11, 1, 1, "", "query_result_dimensions"]], "dafpy.storage_types": [[13, 2, 1, "", "StorageNumber"], [13, 2, 1, "", "StorageScalar"]], "dafpy.views": [[14, 2, 1, "", "ALL_AXES"], [14, 2, 1, "", "ALL_MATRICES"], [14, 2, 1, "", "ALL_SCALARS"], [14, 2, 1, "", "ALL_VECTORS"], [14, 2, 1, "", "ViewAxes"], [14, 2, 1, "", "ViewData"], [14, 1, 1, "", "viewer"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:data", "3": "py:class", "4": "py:method", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "data", "Python data"], "3": ["py", "class", "Python class"], "4": ["py", "method", "Python method"], "5": ["py", "property", "Python property"]}, "titleterms": {"api": [0, 8], "adapt": 1, "anndata_format": 2, "concat": 3, "copi": 4, "data": [5, 12], "format": [6, 12], "generic_funct": 7, "dafpi": 8, "0": [8, 12], "1": [8, 12], "julia_import": 9, "oper": 10, "queri": 11, "daf": 12, "py": 12, "ax": 12, "instal": 12, "usag": 12, "statu": 12, "licens": 12, "mit": 12, "storage_typ": 13, "view": 14}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.todo": 2, "sphinx": 60}, "alltitles": {"API": [[0, "module-dafpy"], [8, "api"]], "adapters": [[1, "module-dafpy.adapters"]], "anndata_format": [[2, "module-dafpy.anndata_format"]], "concat": [[3, "module-dafpy.concat"]], "copies": [[4, "module-dafpy.copies"]], "data": [[5, "module-dafpy.data"]], "formats": [[6, "module-dafpy.formats"]], "generic_functions": [[7, "module-dafpy.generic_functions"]], "dafpy 0.1.1": [[8, "dafpy-0-1-1"]], "julia_import": [[9, "module-dafpy.julia_import"]], "operations": [[10, "module-dafpy.operations"]], "queries": [[11, "module-dafpy.queries"]], "Daf.py 0.1.1 - Data in Axes in Formats": [[12, "daf-py-0-1-1-data-in-axes-in-formats"]], "Installation": [[12, "installation"]], "Usage": [[12, "usage"]], "Status": [[12, "status"]], "License (MIT)": [[12, "license-mit"]], "storage_types": [[13, "module-dafpy.storage_types"]], "views": [[14, "module-dafpy.views"]]}, "indexentries": {"dafpy": [[0, "module-dafpy"]], "module": [[0, "module-dafpy"], [1, "module-dafpy.adapters"], [2, "module-dafpy.anndata_format"], [3, "module-dafpy.concat"], [4, "module-dafpy.copies"], [5, "module-dafpy.data"], [6, "module-dafpy.formats"], [7, "module-dafpy.generic_functions"], [9, "module-dafpy.julia_import"], [10, "module-dafpy.operations"], [11, "module-dafpy.queries"], [13, "module-dafpy.storage_types"], [14, "module-dafpy.views"]], "adapter() (in module dafpy.adapters)": [[1, "dafpy.adapters.adapter"]], "dafpy.adapters": [[1, "module-dafpy.adapters"]], "daf_as_h5ad() (in module dafpy.anndata_format)": [[2, "dafpy.anndata_format.daf_as_h5ad"]], "dafpy.anndata_format": [[2, "module-dafpy.anndata_format"]], "h5ad_as_daf() (in module dafpy.anndata_format)": [[2, "dafpy.anndata_format.h5ad_as_daf"]], "concatenate() (in module dafpy.concat)": [[3, "dafpy.concat.concatenate"]], "dafpy.concat": [[3, "module-dafpy.concat"]], "emptydata (in module dafpy.copies)": [[4, "dafpy.copies.EmptyData"]], "copy_all() (in module dafpy.copies)": [[4, "dafpy.copies.copy_all"]], "copy_axis() (in module dafpy.copies)": [[4, "dafpy.copies.copy_axis"]], "copy_matrix() (in module dafpy.copies)": [[4, "dafpy.copies.copy_matrix"]], "copy_scalar() (in module dafpy.copies)": [[4, "dafpy.copies.copy_scalar"]], "copy_tensor() (in module dafpy.copies)": [[4, "dafpy.copies.copy_tensor"]], "copy_vector() (in module dafpy.copies)": [[4, "dafpy.copies.copy_vector"]], "dafpy.copies": [[4, "module-dafpy.copies"]], "cachegroup (in module dafpy.data)": [[5, "dafpy.data.CacheGroup"]], "dafreadonly (class in dafpy.data)": [[5, "dafpy.data.DafReadOnly"]], "dafreader (class in dafpy.data)": [[5, "dafpy.data.DafReader"]], "dafwriter (class in dafpy.data)": [[5, "dafpy.data.DafWriter"]], "add_axis() (dafpy.data.dafwriter method)": [[5, "dafpy.data.DafWriter.add_axis"]], "axes_set() (dafpy.data.dafreader method)": [[5, "dafpy.data.DafReader.axes_set"]], "axis_dict() (dafpy.data.dafreader method)": [[5, "dafpy.data.DafReader.axis_dict"]], "axis_length() (dafpy.data.dafreader method)": [[5, "dafpy.data.DafReader.axis_length"]], "axis_np_entries() (dafpy.data.dafreader method)": [[5, "dafpy.data.DafReader.axis_np_entries"]], "axis_np_indices() (dafpy.data.dafreader method)": [[5, "dafpy.data.DafReader.axis_np_indices"]], "axis_np_vector() (dafpy.data.dafreader method)": [[5, "dafpy.data.DafReader.axis_np_vector"]], "axis_pd_indices() (dafpy.data.dafreader method)": [[5, "dafpy.data.DafReader.axis_pd_indices"]], "dafpy.data": [[5, "module-dafpy.data"]], "delete_axis() (dafpy.data.dafwriter method)": [[5, "dafpy.data.DafWriter.delete_axis"]], "delete_matrix() (dafpy.data.dafwriter method)": [[5, "dafpy.data.DafWriter.delete_matrix"]], "delete_scalar() (dafpy.data.dafwriter method)": [[5, "dafpy.data.DafWriter.delete_scalar"]], "delete_vector() (dafpy.data.dafwriter method)": [[5, "dafpy.data.DafWriter.delete_vector"]], "description() (dafpy.data.dafreader method)": [[5, "dafpy.data.DafReader.description"]], "empty_cache() (dafpy.data.dafreader method)": [[5, "dafpy.data.DafReader.empty_cache"]], "empty_dense_matrix() (dafpy.data.dafwriter method)": [[5, "dafpy.data.DafWriter.empty_dense_matrix"]], "empty_dense_vector() (dafpy.data.dafwriter method)": [[5, "dafpy.data.DafWriter.empty_dense_vector"]], "empty_sparse_matrix() (dafpy.data.dafwriter method)": [[5, "dafpy.data.DafWriter.empty_sparse_matrix"]], "empty_sparse_vector() (dafpy.data.dafwriter method)": [[5, "dafpy.data.DafWriter.empty_sparse_vector"]], "get_np_matrix() (dafpy.data.dafreader method)": [[5, "dafpy.data.DafReader.get_np_matrix"]], "get_np_query() (dafpy.data.dafreader method)": [[5, "dafpy.data.DafReader.get_np_query"]], "get_np_vector() (dafpy.data.dafreader method)": [[5, "dafpy.data.DafReader.get_np_vector"]], "get_pd_frame() (dafpy.data.dafreader method)": [[5, "dafpy.data.DafReader.get_pd_frame"]], "get_pd_matrix() (dafpy.data.dafreader method)": [[5, "dafpy.data.DafReader.get_pd_matrix"]], "get_pd_query() (dafpy.data.dafreader method)": [[5, "dafpy.data.DafReader.get_pd_query"]], "get_pd_vector() (dafpy.data.dafreader method)": [[5, "dafpy.data.DafReader.get_pd_vector"]], "get_scalar() (dafpy.data.dafreader method)": [[5, "dafpy.data.DafReader.get_scalar"]], "has_axis() (dafpy.data.dafreader method)": [[5, "dafpy.data.DafReader.has_axis"]], "has_matrix() (dafpy.data.dafreader method)": [[5, "dafpy.data.DafReader.has_matrix"]], "has_query() (dafpy.data.dafreader method)": [[5, "dafpy.data.DafReader.has_query"]], "has_scalar() (dafpy.data.dafreader method)": [[5, "dafpy.data.DafReader.has_scalar"]], "has_vector() (dafpy.data.dafreader method)": [[5, "dafpy.data.DafReader.has_vector"]], "matrices_set() (dafpy.data.dafreader method)": [[5, "dafpy.data.DafReader.matrices_set"]], "name (dafpy.data.dafreader property)": [[5, "dafpy.data.DafReader.name"]], "read_only() (dafpy.data.dafreadonly method)": [[5, "dafpy.data.DafReadOnly.read_only"]], "read_only() (dafpy.data.dafreader method)": [[5, "dafpy.data.DafReader.read_only"]], "relayout_matrix() (dafpy.data.dafwriter method)": [[5, "dafpy.data.DafWriter.relayout_matrix"]], "scalars_set() (dafpy.data.dafreader method)": [[5, "dafpy.data.DafReader.scalars_set"]], "set_matrix() (dafpy.data.dafwriter method)": [[5, "dafpy.data.DafWriter.set_matrix"]], "set_scalar() (dafpy.data.dafwriter method)": [[5, "dafpy.data.DafWriter.set_scalar"]], "set_vector() (dafpy.data.dafwriter method)": [[5, "dafpy.data.DafWriter.set_vector"]], "vectors_set() (dafpy.data.dafreader method)": [[5, "dafpy.data.DafReader.vectors_set"]], "chain_reader() (in module dafpy.formats)": [[6, "dafpy.formats.chain_reader"]], "chain_writer() (in module dafpy.formats)": [[6, "dafpy.formats.chain_writer"]], "dafpy.formats": [[6, "module-dafpy.formats"]], "files_daf() (in module dafpy.formats)": [[6, "dafpy.formats.files_daf"]], "h5df() (in module dafpy.formats)": [[6, "dafpy.formats.h5df"]], "memory_daf() (in module dafpy.formats)": [[6, "dafpy.formats.memory_daf"]], "abnormalhandler (in module dafpy.generic_functions)": [[7, "dafpy.generic_functions.AbnormalHandler"]], "loglevel (in module dafpy.generic_functions)": [[7, "dafpy.generic_functions.LogLevel"]], "dafpy.generic_functions": [[7, "module-dafpy.generic_functions"]], "inefficient_action_handler() (in module dafpy.generic_functions)": [[7, "dafpy.generic_functions.inefficient_action_handler"]], "setup_logger() (in module dafpy.generic_functions)": [[7, "dafpy.generic_functions.setup_logger"]], "undef (in module dafpy.julia_import)": [[9, "dafpy.julia_import.Undef"]], "undefinitializer (class in dafpy.julia_import)": [[9, "dafpy.julia_import.UndefInitializer"]], "dafpy.julia_import": [[9, "module-dafpy.julia_import"]], "jl (in module dafpy.julia_import)": [[9, "dafpy.julia_import.jl"]], "jl_version (in module dafpy.julia_import)": [[9, "dafpy.julia_import.jl_version"]], "abs (class in dafpy.operations)": [[10, "dafpy.operations.Abs"]], "clamp (class in dafpy.operations)": [[10, "dafpy.operations.Clamp"]], "convert (class in dafpy.operations)": [[10, "dafpy.operations.Convert"]], "eltwiseoperation (class in dafpy.operations)": [[10, "dafpy.operations.EltwiseOperation"]], "fraction (class in dafpy.operations)": [[10, "dafpy.operations.Fraction"]], "log (class in dafpy.operations)": [[10, "dafpy.operations.Log"]], "max (class in dafpy.operations)": [[10, "dafpy.operations.Max"]], "mean (class in dafpy.operations)": [[10, "dafpy.operations.Mean"]], "median (class in dafpy.operations)": [[10, "dafpy.operations.Median"]], "min (class in dafpy.operations)": [[10, "dafpy.operations.Min"]], "quantile (class in dafpy.operations)": [[10, "dafpy.operations.Quantile"]], "queryoperation (class in dafpy.operations)": [[10, "dafpy.operations.QueryOperation"]], "querysequence (class in dafpy.operations)": [[10, "dafpy.operations.QuerySequence"]], "reductionoperation (class in dafpy.operations)": [[10, "dafpy.operations.ReductionOperation"]], "round (class in dafpy.operations)": [[10, "dafpy.operations.Round"]], "significant (class in dafpy.operations)": [[10, "dafpy.operations.Significant"]], "std (class in dafpy.operations)": [[10, "dafpy.operations.Std"]], "stdn (class in dafpy.operations)": [[10, "dafpy.operations.StdN"]], "sum (class in dafpy.operations)": [[10, "dafpy.operations.Sum"]], "var (class in dafpy.operations)": [[10, "dafpy.operations.Var"]], "varn (class in dafpy.operations)": [[10, "dafpy.operations.VarN"]], "dafpy.operations": [[10, "module-dafpy.operations"]], "and (class in dafpy.queries)": [[11, "dafpy.queries.And"]], "andnot (class in dafpy.queries)": [[11, "dafpy.queries.AndNot"]], "asaxis (class in dafpy.queries)": [[11, "dafpy.queries.AsAxis"]], "axis (class in dafpy.queries)": [[11, "dafpy.queries.Axis"]], "countby (class in dafpy.queries)": [[11, "dafpy.queries.CountBy"]], "fetch (class in dafpy.queries)": [[11, "dafpy.queries.Fetch"]], "groupby (class in dafpy.queries)": [[11, "dafpy.queries.GroupBy"]], "ifmissing (class in dafpy.queries)": [[11, "dafpy.queries.IfMissing"]], "ifnot (class in dafpy.queries)": [[11, "dafpy.queries.IfNot"]], "isequal (class in dafpy.queries)": [[11, "dafpy.queries.IsEqual"]], "isgreater (class in dafpy.queries)": [[11, "dafpy.queries.IsGreater"]], "isgreaterequal (class in dafpy.queries)": [[11, "dafpy.queries.IsGreaterEqual"]], "isless (class in dafpy.queries)": [[11, "dafpy.queries.IsLess"]], "islessequal (class in dafpy.queries)": [[11, "dafpy.queries.IsLessEqual"]], "ismatch (class in dafpy.queries)": [[11, "dafpy.queries.IsMatch"]], "isnotequal (class in dafpy.queries)": [[11, "dafpy.queries.IsNotEqual"]], "isnotmatch (class in dafpy.queries)": [[11, "dafpy.queries.IsNotMatch"]], "lookup (class in dafpy.queries)": [[11, "dafpy.queries.Lookup"]], "maskslice (class in dafpy.queries)": [[11, "dafpy.queries.MaskSlice"]], "names (class in dafpy.queries)": [[11, "dafpy.queries.Names"]], "or (class in dafpy.queries)": [[11, "dafpy.queries.Or"]], "ornot (class in dafpy.queries)": [[11, "dafpy.queries.OrNot"]], "query (in module dafpy.queries)": [[11, "dafpy.queries.Query"]], "squaremaskcolumn (class in dafpy.queries)": [[11, "dafpy.queries.SquareMaskColumn"]], "squaremaskrow (class in dafpy.queries)": [[11, "dafpy.queries.SquareMaskRow"]], "xor (class in dafpy.queries)": [[11, "dafpy.queries.Xor"]], "xornot (class in dafpy.queries)": [[11, "dafpy.queries.XorNot"]], "dafpy.queries": [[11, "module-dafpy.queries"]], "parse_query() (in module dafpy.queries)": [[11, "dafpy.queries.parse_query"]], "query_result_dimensions() (in module dafpy.queries)": [[11, "dafpy.queries.query_result_dimensions"]], "storagenumber (in module dafpy.storage_types)": [[13, "dafpy.storage_types.StorageNumber"]], "storagescalar (in module dafpy.storage_types)": [[13, "dafpy.storage_types.StorageScalar"]], "dafpy.storage_types": [[13, "module-dafpy.storage_types"]], "all_axes (in module dafpy.views)": [[14, "dafpy.views.ALL_AXES"]], "all_matrices (in module dafpy.views)": [[14, "dafpy.views.ALL_MATRICES"]], "all_scalars (in module dafpy.views)": [[14, "dafpy.views.ALL_SCALARS"]], "all_vectors (in module dafpy.views)": [[14, "dafpy.views.ALL_VECTORS"]], "viewaxes (in module dafpy.views)": [[14, "dafpy.views.ViewAxes"]], "viewdata (in module dafpy.views)": [[14, "dafpy.views.ViewData"]], "dafpy.views": [[14, "module-dafpy.views"]], "viewer() (in module dafpy.views)": [[14, "dafpy.views.viewer"]]}})